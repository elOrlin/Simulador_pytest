name: Django Pytest CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user_dev
          POSTGRES_PASSWORD: girls754
          POSTGRES_DB: dev_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Flake8
        run: pip install flake8
      - name: Run Flake8
        run: flake8 .
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-django factory_boy faker pytest-mock pytest-cov

      - name: Run migrations
        env:
          POSTGRES_DB: dev_db
          POSTGRES_USER: user_dev
          POSTGRES_PASSWORD: girls754
          POSTGRES_HOST: localhost
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        env:
          POSTGRES_DB: dev_db
          POSTGRES_USER: user_dev
          POSTGRES_PASSWORD: girls754
          POSTGRES_HOST: localhost
        run: |
          pytest --ds=simulador_pytest.settings --cov=apps --cov-report=term-missing --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
      - name: Trigger Render Deploy
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          api-key: ${{ secrets.RENDER_API_KEY }}
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
