name: Django Pytest CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{secrets.POSTGRES_USER}}"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5
    env:
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      DJANGO_SETTINGS_MODULE: simulador_pytest.settings

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13.7"
      - uses: actions/cache@v4
        with:
          path: |
            path/to/dependencies
            some/other/dependencies
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install psycopg
          pip install pytest pytest-django factory_boy faker pytest-mock pytest-cov
      - name: Run tests with coverage
        run: pytest --ds=simulador_pytest.settings --cov=apps --cov-report=term-missing --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
